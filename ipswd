#!/bin/bash

# Paths to download files
IPSW_DEST_FOLDER="/mnt/ipsw/"  # Don't forget to add trailing slash
SCRIPT_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)

# Hostname
HOSTNAME=$(hostname)

# Arrays to store IPSW file URLs
available_ipsws=()
loaded_ipsws=()
load_ipsws=()

# Check if curl command is available
if ! command -v curl &> /dev/null; then
    echo "curl  command is not found. Please install curl."
    exit 1
fi

# Check if wget command is available
if ! command -v wget &> /dev/null; then
    echo "wget command is not found. Please install wget."
    exit 1
fi

# Check if the job is already running
# Create pid file
SCRIPT_PID="/var/run/${0##*/}.pid"

if [[ -f ${SCRIPT_PID} ]]; then
    echo "Script is already running"
    exit
else
    touch ${SCRIPT_PID}  # Create the pid file
fi

# Ensure PID file is removed on program exit.
cleanup() {
    rm -f -- "${SCRIPT_PID}"
    unset available_ipsws
    unset loaded_ipsws
    unset load_ipsws
    rm "${SCRIPT_DIR}/mail.txt"
}

trap cleanup EXIT

# Get the list of IPSW files from Apple
available_ipsws=$(wget --quiet --output-document - http://ax.phobos.apple.com.edgesuite.net/WebObjects/MZStore.woa/wa/com.apple.jingle.appserver.client.MZITunesClientCheck/version | sed -e 's/^[[:space:]]*//' -e 's/<string>//' -e 's/\(<\/string>\)*$//g' | grep -i 'http' | grep -i Restore | grep -ie 'iPhone\|iPad\|iPod' | sort | uniq)

# Previously loaded IPSWs by this script
loaded_ipsws=($(< "${SCRIPT_DIR}/${0##*/}.db"))

IFS=" " read -r -a available_ipsws <<< "$(echo "${available_ipsws[@]}" | tr ' ' '\n' | sort -u | tr '\n' ' ')"
IFS=" " read -r -a loaded_ipsws <<< "$(echo "${loaded_ipsws[@]}" | tr ' ' '\n' | sort -u | tr '\n' ' ')"

diff() {
    local array1=("${!1}")
    local array2=("${!2}")
    local diff_array=()

    for item in "${array1[@]}"; do
        if [[ ! " ${array2[@]} " =~ " $item " ]]; then
            diff_array+=("$item")
        fi
    done

    # echo "${diff_array[@]}"   # debug
}

load_ipsws=($(diff available_ipsws[@] loaded_ipsws[@]))

echo "${load_ipsws[*]}"

# Download new files
if [ -n "$load_ipsws" ]; then

    # Create the IPSW folder if it doesn't exist
    mkdir -p "${IPSW_DEST_FOLDER}"

    for ((i=0; i<${#load_ipsws[@]}; i++)); do
        # Download file and retry up to 5 times
        wget --quiet -t 5 -c "${load_ipsws[i]}" --directory-prefix "${IPSW_DEST_FOLDER}"
        # Check if file download was successful
        if [ $? -eq 0 ]; then
            echo "${load_ipsws[i]}" >> "${SCRIPT_DIR}/${0##*/}.db"
        fi
    done

    # Grant permissions to user
    # chown -R nobody:support "${IPSW_DEST_FOLDER}"
    chmod -R 644 "${IPSW_DEST_FOLDER}"

    # Build the email content
    printf "date: %s\nfrom: system@pretend.co\nto: support@pretend.co\nsubject: New items were loaded\n\n" "$(date +%d-%m-%y)" >> "${SCRIPT_DIR}/mail.txt"
    printf  "Some new items were found. Don't worry, they are already loaded.\n" >> "${SCRIPT_DIR}/mail.txt"
    printf "%s\n" "${load_ipsws[@]}" >> "${SCRIPT_DIR}/mail.txt"
    printf "\n--\niOS Loader\n" >> "${SCRIPT_DIR}/mail.txt"

    # Send the email
    /usr/sbin/sendmail -f "system@pretend.co" support@pretend.co < "${SCRIPT_DIR}/mail.txt"

else
    exit 1
fi

exit 0
